/*
 * Copyright 2018 NXP
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

/dts-v1/;

#include "fsl-imx8mn.dtsi"

/ {
	model = "i.MX8MN";
	compatible = "fsl,imx8mn-evk", "fsl,imx8mn";

	chosen {
		bootargs = "console=ttymxc0,115200 earlycon=ec_imx6q,0x30860000,115200";
		stdout-patch = &uart1;
	};

	firmware {
		optee {
			compatible = "linaro,optee-tz";
			method = "smc";
		};
	};
};


&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog_1>;

	imx8mn-evk {
		pinctrl_hog_1: hoggrp-1 {
			fsl,pins = <
				MX8MN_IOMUXC_GPIO1_IO08__GPIO1_IO8	    0x19
			>;
		};

		pinctrl_fec1: fec1grp {
			fsl,pins = <
				MX8MN_IOMUXC_ENET_MDC__ENET1_MDC		    0x03
				MX8MN_IOMUXC_ENET_MDIO__ENET1_MDIO	    0x03
				MX8MN_IOMUXC_ENET_TD3__ENET1_RGMII_TD3	    0x1f
				MX8MN_IOMUXC_ENET_TD2__ENET1_RGMII_TD2	    0x1f
				MX8MN_IOMUXC_ENET_TD1__ENET1_RGMII_TD1	    0x1f
				MX8MN_IOMUXC_ENET_TD0__ENET1_RGMII_TD0	    0x1f
				MX8MN_IOMUXC_ENET_RD3__ENET1_RGMII_RD3	    0x91
				MX8MN_IOMUXC_ENET_RD2__ENET1_RGMII_RD2	    0x91
				MX8MN_IOMUXC_ENET_RD1__ENET1_RGMII_RD1	    0x91
				MX8MN_IOMUXC_ENET_RD0__ENET1_RGMII_RD0	    0x91
				MX8MN_IOMUXC_ENET_TXC__ENET1_RGMII_TXC	    0x1f
				MX8MN_IOMUXC_ENET_RXC__ENET1_RGMII_RXC	    0x91
				MX8MN_IOMUXC_ENET_RX_CTL__ENET1_RGMII_RX_CTL 0x91
				MX8MN_IOMUXC_ENET_TX_CTL__ENET1_RGMII_TX_CTL 0x1f
				MX8MN_IOMUXC_GPIO1_IO09__GPIO1_IO9	    0x19				
			>;
		};

		pinctrl_i2c1: i2c1grp {
			fsl,pins = <
				MX8MN_IOMUXC_I2C1_SCL__I2C1_SCL			0x400001c3
				MX8MN_IOMUXC_I2C1_SDA__I2C1_SDA			0x400001c3
			>;
		};

		pinctrl_i2c2: i2c2grp {
			fsl,pins = <
				MX8MN_IOMUXC_I2C2_SCL__I2C2_SCL			0x400001c3
				MX8MN_IOMUXC_I2C2_SDA__I2C2_SDA			0x400001c3
			>;
		};

		pinctrl_i2c3: i2c3grp {
			fsl,pins = <
				MX8MN_IOMUXC_I2C3_SCL__I2C3_SCL			0x400001c3
				MX8MN_IOMUXC_I2C3_SDA__I2C3_SDA			0x400001c3
			>;
		};

		pinctrl_i2c1_gpio: i2c1grp-gpio {
			fsl,pins = <
				MX8MN_IOMUXC_I2C1_SCL__GPIO5_IO14        	0x400001c3
				MX8MN_IOMUXC_I2C1_SDA__GPIO5_IO15        	0x400001c3
			>;
		};

		pinctrl_i2c2_gpio: i2c2grp-gpio {
			fsl,pins = <
				MX8MN_IOMUXC_I2C2_SCL__GPIO5_IO16        	0x400001c3
				MX8MN_IOMUXC_I2C2_SDA__GPIO5_IO17        	0x400001c3
			>;
		};

		pinctrl_i2c3_gpio: i2c3grp-gpio {
			fsl,pins = <
				MX8MN_IOMUXC_I2C3_SCL__GPIO5_IO18        		0x1c3
				MX8MN_IOMUXC_I2C3_SDA__GPIO5_IO19        	0x1c3
			>;
		};

		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX8MN_IOMUXC_UART1_RXD__UART1_DCE_RX	0x49
				MX8MN_IOMUXC_UART1_TXD__UART1_DCE_TX	0x49
			>;
		};

		pinctrl_usdhc1: usdhc1grp {
			fsl,pins = <
				MX8MN_IOMUXC_SD1_CLK__USDHC1_CLK			0x40000190
				MX8MN_IOMUXC_SD1_CMD__USDHC1_CMD			0x1d0
				MX8MN_IOMUXC_SD1_DATA0__USDHC1_DATA0		0x1d0
				MX8MN_IOMUXC_SD1_DATA1__USDHC1_DATA1		0x1d0
				MX8MN_IOMUXC_SD1_DATA2__USDHC1_DATA2		0x1d0
				MX8MN_IOMUXC_SD1_DATA3__USDHC1_DATA3		0x1d0
				MX8MN_IOMUXC_SD1_DATA4__USDHC1_DATA4		0x1d0
				MX8MN_IOMUXC_SD1_DATA5__USDHC1_DATA5		0x1d0
				MX8MN_IOMUXC_SD1_DATA6__USDHC1_DATA6		0x1d0
				MX8MN_IOMUXC_SD1_DATA7__USDHC1_DATA7		0x1d0
				MX8MN_IOMUXC_SD1_STROBE__USDHC1_STROBE 		0x190
				MX8MN_IOMUXC_SD1_RESET_B__USDHC1_RESET_B		0xc1
			>;
		};

		pinctrl_usdhc1_100mhz: usdhc1grp100mhz {
			fsl,pins = <
				MX8MN_IOMUXC_SD1_CLK__USDHC1_CLK			0x40000194
				MX8MN_IOMUXC_SD1_CMD__USDHC1_CMD			0x1d4
				MX8MN_IOMUXC_SD1_DATA0__USDHC1_DATA0		0x1d4
				MX8MN_IOMUXC_SD1_DATA1__USDHC1_DATA1		0x1d4
				MX8MN_IOMUXC_SD1_DATA2__USDHC1_DATA2		0x1d4
				MX8MN_IOMUXC_SD1_DATA3__USDHC1_DATA3		0x1d4
				MX8MN_IOMUXC_SD1_DATA4__USDHC1_DATA4		0x1d4
				MX8MN_IOMUXC_SD1_DATA5__USDHC1_DATA5		0x1d4
				MX8MN_IOMUXC_SD1_DATA6__USDHC1_DATA6		0x1d4
				MX8MN_IOMUXC_SD1_DATA7__USDHC1_DATA7		0x1d4
				MX8MN_IOMUXC_SD1_STROBE__USDHC1_STROBE 		0x194
				MX8MN_IOMUXC_SD1_RESET_B__USDHC1_RESET_B		0xc1
			>;
		};

		pinctrl_usdhc1_200mhz: usdhc1grp200mhz {
			fsl,pins = <
				MX8MN_IOMUXC_SD1_CLK__USDHC1_CLK			0x40000196
				MX8MN_IOMUXC_SD1_CMD__USDHC1_CMD			0x1d6
				MX8MN_IOMUXC_SD1_DATA0__USDHC1_DATA0		0x1d6
				MX8MN_IOMUXC_SD1_DATA1__USDHC1_DATA1		0x1d6
				MX8MN_IOMUXC_SD1_DATA2__USDHC1_DATA2		0x1d6
				MX8MN_IOMUXC_SD1_DATA3__USDHC1_DATA3		0x1d6
				MX8MN_IOMUXC_SD1_DATA4__USDHC1_DATA4		0x1d6
				MX8MN_IOMUXC_SD1_DATA5__USDHC1_DATA5		0x1d6
				MX8MN_IOMUXC_SD1_DATA6__USDHC1_DATA6		0x1d6
				MX8MN_IOMUXC_SD1_DATA7__USDHC1_DATA7		0x1d6
				MX8MN_IOMUXC_SD1_STROBE__USDHC1_STROBE 		0x196
				MX8MN_IOMUXC_SD1_RESET_B__USDHC1_RESET_B		0xc1
			>;
		};

		pinctrl_usdhc2_gpio: usdhc2grpgpio {
			fsl,pins = <
				MX8MN_IOMUXC_SD2_RESET_B__GPIO2_IO19	0x41
			>;
		};

		pinctrl_usdhc2: usdhc2grp {
			fsl,pins = <
				MX8MN_IOMUXC_SD2_CLK__USDHC2_CLK		0x190
				MX8MN_IOMUXC_SD2_CMD__USDHC2_CMD		0x1d0
				MX8MN_IOMUXC_SD2_DATA0__USDHC2_DATA0	0x1d0
				MX8MN_IOMUXC_SD2_DATA1__USDHC2_DATA1	0x1d0
				MX8MN_IOMUXC_SD2_DATA2__USDHC2_DATA2	0x1d0
				MX8MN_IOMUXC_SD2_DATA3__USDHC2_DATA3	0x1d0
			>;
		};

		pinctrl_usdhc2_100mhz: usdhc2grp100mhz {
			fsl,pins = <
				MX8MN_IOMUXC_SD2_CLK__USDHC2_CLK		0x194
				MX8MN_IOMUXC_SD2_CMD__USDHC2_CMD		0x1d4
				MX8MN_IOMUXC_SD2_DATA0__USDHC2_DATA0	0x1d4
				MX8MN_IOMUXC_SD2_DATA1__USDHC2_DATA1	0x1d4
				MX8MN_IOMUXC_SD2_DATA2__USDHC2_DATA2	0x1d4
				MX8MN_IOMUXC_SD2_DATA3__USDHC2_DATA3	0x1d4
			>;
		};

		pinctrl_usdhc2_200mhz: usdhc2grp200mhz {
			fsl,pins = <
				MX8MN_IOMUXC_SD2_CLK__USDHC2_CLK		0x196
				MX8MN_IOMUXC_SD2_CMD__USDHC2_CMD		0x1d6
				MX8MN_IOMUXC_SD2_DATA0__USDHC2_DATA0	0x1d6
				MX8MN_IOMUXC_SD2_DATA1__USDHC2_DATA1	0x1d6
				MX8MN_IOMUXC_SD2_DATA2__USDHC2_DATA2	0x1d6
				MX8MN_IOMUXC_SD2_DATA3__USDHC2_DATA3	0x1d6
			>;
		};
#ifdef CONFIG_SBCSOM
		pinctrl_usdhc3: usdhc3grp {
			fsl,pins = <
				MX8MN_IOMUXC_NAND_WE_B__USDHC3_CLK		0x190
				MX8MN_IOMUXC_NAND_WP_B__USDHC3_CMD		0x1d0
				MX8MN_IOMUXC_NAND_DATA04__USDHC3_DATA0	0x1d0
				MX8MN_IOMUXC_NAND_DATA05__USDHC3_DATA1	0x1d0
				MX8MN_IOMUXC_NAND_DATA06__USDHC3_DATA2	0x1d0
				MX8MN_IOMUXC_NAND_DATA07__USDHC3_DATA3	0x1d0
			>;
		};

		pinctrl_usdhc3_100mhz: usdhc3grp100mhz {
			fsl,pins = <
				MX8MN_IOMUXC_NAND_WE_B__USDHC3_CLK		0x194
				MX8MN_IOMUXC_NAND_WP_B__USDHC3_CMD		0x1d4
				MX8MN_IOMUXC_NAND_DATA04__USDHC3_DATA0	0x1d4
				MX8MN_IOMUXC_NAND_DATA05__USDHC3_DATA1	0x1d4
				MX8MN_IOMUXC_NAND_DATA06__USDHC3_DATA2	0x1d4
				MX8MN_IOMUXC_NAND_DATA07__USDHC3_DATA3	0x1d4
			>;
		};

		pinctrl_usdhc3_200mhz: usdhc3grp200mhz {
			fsl,pins = <
				MX8MN_IOMUXC_NAND_WE_B__USDHC3_CLK		0x196
				MX8MN_IOMUXC_NAND_WP_B__USDHC3_CMD		0x1d6
				MX8MN_IOMUXC_NAND_DATA04__USDHC3_DATA0	0x1d6
				MX8MN_IOMUXC_NAND_DATA05__USDHC3_DATA1	0x1d6
				MX8MN_IOMUXC_NAND_DATA06__USDHC3_DATA2	0x1d6
				MX8MN_IOMUXC_NAND_DATA07__USDHC3_DATA3	0x1d6
			>;
		};
#endif
	};
};

&i2c1 {
	clock-frequency = <400000>;
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&pinctrl_i2c1>;
	pinctrl-1 = <&pinctrl_i2c1_gpio>;
	scl-gpios = <&gpio5 14 GPIO_ACTIVE_HIGH>;
	sda-gpios = <&gpio5 15 GPIO_ACTIVE_HIGH>;
	status = "okay";

};

&i2c2 {
	clock-frequency = <400000>;
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&pinctrl_i2c2>;
	pinctrl-1 = <&pinctrl_i2c2_gpio>;
	scl-gpios = <&gpio5 16 GPIO_ACTIVE_HIGH>;
	sda-gpios = <&gpio5 17 GPIO_ACTIVE_HIGH>;
	status = "okay";
};

&i2c3 {
	clock-frequency = <100000>;
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&pinctrl_i2c3>;
	pinctrl-1 = <&pinctrl_i2c3_gpio>;
	scl-gpios = <&gpio5 18 GPIO_ACTIVE_HIGH>;
	sda-gpios = <&gpio5 19 GPIO_ACTIVE_HIGH>;
	status = "okay";

	pmic: bd71837@4b {
		reg = <0x4b>;
		compatible = "rohm,bd71837";
		/* PMIC BD71837 PMIC_nINT GPIO1_IO3 */

		gpo {
			rohm,drv = <0x0C>;	/* 0b0000_1100 all gpos with cmos output mode */
		};

		regulators {
			#address-cells = <1>;
			#size-cells = <0>;

			bd71837,pmic-buck2-uses-i2c-dvs;
			bd71837,pmic-buck2-dvs-voltage = <1000000>, <900000>, <0>; /* VDD_ARM: Run-Idle */

			buck1_reg: regulator@0 {
				reg = <0>;
				regulator-compatible = "buck1";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <1300000>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <1250>;
			};

			buck2_reg: regulator@1 {
				reg = <1>;
				regulator-compatible = "buck2";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <1300000>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <1250>;
			};

			buck3_reg: regulator@2 {
				reg = <2>;
				regulator-compatible = "buck3";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <1300000>;
			};

			buck4_reg: regulator@3 {
				reg = <3>;
				regulator-compatible = "buck4";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <1300000>;
			};

			buck5_reg: regulator@4 {
				reg = <4>;
				regulator-compatible = "buck5";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <1350000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck6_reg: regulator@5 {
				reg = <5>;
				regulator-compatible = "buck6";
				regulator-min-microvolt = <3000000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck7_reg: regulator@6 {
				reg = <6>;
				regulator-compatible = "buck7";
				regulator-min-microvolt = <1605000>;
				regulator-max-microvolt = <1995000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck8_reg: regulator@7 {
				reg = <7>;
				regulator-compatible = "buck8";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1400000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo1_reg: regulator@8 {
				reg = <8>;
				regulator-compatible = "ldo1";
				regulator-min-microvolt = <3000000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo2_reg: regulator@9 {
				reg = <9>;
				regulator-compatible = "ldo2";
				regulator-min-microvolt = <900000>;
				regulator-max-microvolt = <900000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo3_reg: regulator@10 {
				reg = <10>;
				regulator-compatible = "ldo3";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo4_reg: regulator@11 {
				reg = <11>;
				regulator-compatible = "ldo4";
				regulator-min-microvolt = <900000>;
				regulator-max-microvolt = <1800000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo5_reg: regulator@12 {
				reg = <12>;
				regulator-compatible = "ldo5";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
			};

			ldo6_reg: regulator@13 {
				reg = <13>;
				regulator-compatible = "ldo6";
				regulator-min-microvolt = <900000>;
				regulator-max-microvolt = <1800000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo7_reg: regulator@14 {
				reg = <14>;
				regulator-compatible = "ldo7";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
			};
		};
	};
};

&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_fec1>;
	phy-mode = "rgmii-id";
	phy-handle = <&ethphy0>;
	fsl,magic-packet;
	status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@0 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <4>;
			at803x,led-act-blind-workaround;
			at803x,eee-okay;
		/*	at803x,vddio-1p8v; */
			at803x,eee-disabled; 
		};
	};
};

&uart1 { /* console */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	status = "okay";
};

&usdhc1 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc1>;
	pinctrl-1 = <&pinctrl_usdhc1_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc1_200mhz>;
	bus-width = <8>;
	non-removable;
	status = "okay";
};

&usdhc2 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_gpio>;
	pinctrl-1 = <&pinctrl_usdhc2_100mhz>, <&pinctrl_usdhc2_gpio>;
	pinctrl-2 = <&pinctrl_usdhc2_200mhz>, <&pinctrl_usdhc2_gpio>;
	bus-width = <4>;
	non-removable;
	status = "okay";
};

#ifdef CONFIG_SBCSOM
&usdhc3 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc3>;
	pinctrl-1 = <&pinctrl_usdhc3_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc3_200mhz>;
	bus-width = <4>;
	non-removable;
	status = "okay";
};
#endif

&A53_0 {
	arm-supply = <&buck2_reg>;
};

&usbotg1 {
	status = "okay";
};

&usbotg2 {
	status = "okay";
};
