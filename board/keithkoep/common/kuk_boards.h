/*
 * Copyright 2019 Keith & Koep GmbH
 */
#ifdef  CONFIG_ENGINEERINGSAMPLE_MYON2
#define ASSUME_ENGINEERINGSAMPLE_MYON2        1
#else
#ifdef  CONFIG_ENGINEERINGSAMPLE_TRIZEPS8MINI
#define ASSUME_ENGINEERINGSAMPLE_TRIZEPS8MINI 1
#else
#ifdef CONFIG_MYON2_V1R1_2GB
#define ASSUME_MYON2_V1R1_2GB 1
#else
#ifdef CONFIG_TRIZEPS8MINI_V1R2_2GB
#define ASSUME_TRIZEPS8MINI_V1R2_2GB 1
#else
//#define ASSUME_ENGINEERINGSAMPLE_TRIZEPS8
//#define ASSUME_ENGINEERINGSAMPLE_TRIZEPS8MINI 1
//#define ASSUME_TRIZEPS8MINI_V1R2_2GB  1
#define ASSUME_MYON2_V1R1_2GB 1
//#define ASSUME_TRIZEPS8MINI_V1R2_4GB  1
//#define ASSUME_ENGINEERINGSAMPLE_MYON2 1
#endif
#endif
#endif
#endif

#ifdef ASSUME_ENGINEERINGSAMPLE_TRIZEPS8
#define ASSUME__KUK_MODULE_TYPE         KUK_MODULE_TRIZEPS8
#define ASSUME__KUK_RAMWIDTH            KUK_RAMWIDTH_32BIT
#define ASSUME__KUK_RAMSIZE             KUK_RAMSIZE_2GB
#define ASSUME__KUK_RAMSKEW             0
#define ASSUME__KUK_PCBREV              KUK_PCBREV_V1R1
#define ASSUME__KUK_TEMPERATURERANGE    KUK_TEMPERATURERANGE_UNKNOWN
#define ASSUME__KUK_BOOTSTORAGE         KUK_BOOTSTORAGE_EMMCxG

#define ASSUME__PERIPHERAL_ETHERNET     KUK_ETHERNET_AR8031    
#define ASSUME__PERIPHERAL_WIRELESS     KUK_WIRELESS_UNKNOWN
#define ASSUME__PERIPHERAL_AUDIO        KUK_AUDIO_WM8983
#define ASSUME__PERIPHERAL_MCU          KUK_MCU_MKV11Z64VFM7
#define ASSUME__PERIPHERAL_LVDS         KUK_LVDS_SN65DSI83
#define ASSUME__PERIPHERAL_FPGA         KUK_FPGA_LCMXO3LF_2100E
#define ASSUME__PERIPHERAL_IOVOLTAGE    KUK_IOVOLTAGE_3V3
#else
#ifdef ASSUME_ENGINEERINGSAMPLE_TRIZEPS8MINI
#define ASSUME__KUK_MODULE_TYPE         KUK_MODULE_TRIZEPS8MINI
#define ASSUME__KUK_RAMWIDTH            KUK_RAMWIDTH_32BIT
#define ASSUME__KUK_RAMSIZE             KUK_RAMSIZE_2GB
#define ASSUME__KUK_RAMSKEW             0
#define ASSUME__KUK_PCBREV              KUK_PCBREV_V1R2
#define ASSUME__KUK_TEMPERATURERANGE    KUK_TEMPERATURERANGE_UNKNOWN
#define ASSUME__KUK_BOOTSTORAGE         KUK_BOOTSTORAGE_UNKNOWN

#define ASSUME__PERIPHERAL_ETHERNET     KUK_ETHERNET_AR8031    
#define ASSUME__PERIPHERAL_WIRELESS     KUK_WIRELESS_UNKNOWN
#define ASSUME__PERIPHERAL_AUDIO        KUK_AUDIO_WM8983
#define ASSUME__PERIPHERAL_MCU          KUK_MCU_MKV11Z64VFM7
#define ASSUME__PERIPHERAL_LVDS         KUK_LVDS_SN65DSI83
#define ASSUME__PERIPHERAL_FPGA         KUK_FPGA_LCMXO3LF_2100E
#define ASSUME__PERIPHERAL_IOVOLTAGE    KUK_IOVOLTAGE_3V3
#else
#ifdef ASSUME_TRIZEPS8MINI_V1R2_2GB
#define ASSUME__KUK_MODULE_TYPE         KUK_MODULE_TRIZEPS8MINI
#define ASSUME__KUK_RAMWIDTH            KUK_RAMWIDTH_32BIT
#define ASSUME__KUK_RAMSIZE             KUK_RAMSIZE_2GB
#define ASSUME__KUK_RAMSKEW             1
#define ASSUME__KUK_PCBREV              KUK_PCBREV_V1R2
#define ASSUME__KUK_TEMPERATURERANGE    KUK_TEMPERATURERANGE_UNKNOWN
#define ASSUME__KUK_BOOTSTORAGE         KUK_BOOTSTORAGE_UNKNOWN

#define ASSUME__PERIPHERAL_ETHERNET     KUK_ETHERNET_AR8031    
#define ASSUME__PERIPHERAL_WIRELESS     KUK_WIRELESS_UNKNOWN
#define ASSUME__PERIPHERAL_AUDIO        KUK_AUDIO_WM8983
#define ASSUME__PERIPHERAL_MCU          KUK_MCU_MKV11Z64VFM7
#define ASSUME__PERIPHERAL_LVDS         KUK_LVDS_SN65DSI83
#define ASSUME__PERIPHERAL_FPGA         KUK_FPGA_LCMXO3LF_2100E
#define ASSUME__PERIPHERAL_IOVOLTAGE    KUK_IOVOLTAGE_3V3
#else
#ifdef ASSUME_TRIZEPS8MINI_V1R2_4GB
#define ASSUME__KUK_MODULE_TYPE         KUK_MODULE_TRIZEPS8MINI
#define ASSUME__KUK_RAMWIDTH            KUK_RAMWIDTH_32BIT
#define ASSUME__KUK_RAMSIZE             KUK_RAMSIZE_4GB
#define ASSUME__KUK_RAMSKEW             0
#define ASSUME__KUK_PCBREV              KUK_PCBREV_V1R2
#define ASSUME__KUK_TEMPERATURERANGE    KUK_TEMPERATURERANGE_UNKNOWN
#define ASSUME__KUK_BOOTSTORAGE         KUK_BOOTSTORAGE_UNKNOWN

#define ASSUME__PERIPHERAL_ETHERNET     KUK_ETHERNET_AR8031    
#define ASSUME__PERIPHERAL_WIRELESS     KUK_WIRELESS_UNKNOWN
#define ASSUME__PERIPHERAL_AUDIO        KUK_AUDIO_WM8983
#define ASSUME__PERIPHERAL_MCU          KUK_MCU_MKV11Z64VFM7
#define ASSUME__PERIPHERAL_LVDS         KUK_LVDS_SN65DSI83
#define ASSUME__PERIPHERAL_FPGA         KUK_FPGA_LCMXO3LF_2100E
#define ASSUME__PERIPHERAL_IOVOLTAGE    KUK_IOVOLTAGE_3V3
#else
#ifdef ASSUME_ENGINEERINGSAMPLE_MYON2
#define ASSUME__KUK_MODULE_TYPE         KUK_MODULE_MYON2
#define ASSUME__KUK_RAMWIDTH            KUK_RAMWIDTH_32BIT
#define ASSUME__KUK_RAMSIZE             KUK_RAMSIZE_2GB
#define ASSUME__KUK_RAMSKEW             0
#define ASSUME__KUK_PCBREV              KUK_PCBREV_V1R1
#define ASSUME__KUK_TEMPERATURERANGE    KUK_TEMPERATURERANGE_UNKNOWN
#define ASSUME__KUK_BOOTSTORAGE         KUK_BOOTSTORAGE_EMMCxGB

#define ASSUME__PERIPHERAL_ETHERNET     KUK_ETHERNET_NONE    
#define ASSUME__PERIPHERAL_WIRELESS     KUK_WIRELESS_NONE
#define ASSUME__PERIPHERAL_AUDIO        KUK_AUDIO_WM8983
#define ASSUME__PERIPHERAL_MCU          KUK_MCU_NONE
#define ASSUME__PERIPHERAL_LVDS         KUK_LVDS_UNKNOWN
#define ASSUME__PERIPHERAL_FPGA         KUK_FPGA_NONE
#define ASSUME__PERIPHERAL_IOVOLTAGE    KUK_IOVOLTAGE_1V8
#else
#ifdef ASSUME_MYON2_V1R1_2GB
#define ASSUME__KUK_MODULE_TYPE         KUK_MODULE_MYON2
#define ASSUME__KUK_RAMWIDTH            KUK_RAMWIDTH_32BIT
#define ASSUME__KUK_RAMSIZE             KUK_RAMSIZE_2GB
#define ASSUME__KUK_RAMSKEW             1
#define ASSUME__KUK_PCBREV              KUK_PCBREV_V1R1
#define ASSUME__KUK_TEMPERATURERANGE    KUK_TEMPERATURERANGE_UNKNOWN
#define ASSUME__KUK_BOOTSTORAGE         KUK_BOOTSTORAGE_EMMCxGB

#define ASSUME__PERIPHERAL_ETHERNET     KUK_ETHERNET_NONE    
#define ASSUME__PERIPHERAL_WIRELESS     KUK_WIRELESS_NONE
#define ASSUME__PERIPHERAL_AUDIO        KUK_AUDIO_WM8983
#define ASSUME__PERIPHERAL_MCU          KUK_MCU_NONE
#define ASSUME__PERIPHERAL_LVDS         KUK_LVDS_UNKNOWN
#define ASSUME__PERIPHERAL_FPGA         KUK_FPGA_NONE
#define ASSUME__PERIPHERAL_IOVOLTAGE    KUK_IOVOLTAGE_1V8
#else
// Defaults if fuse not set:
#define ASSUME__KUK_MODULE_TYPE         KUK_MODULE_UNKNOWN
#define ASSUME__KUK_RAMWIDTH            KUK_RAMWIDTH_32BIT
#define ASSUME__KUK_RAMSIZE             KUK_RAMSIZE_2GB
#define ASSUME__KUK_RAMSKEW             1
#define ASSUME__KUK_PCBREV              KUK_PCBREV_UNKNOWN
#define ASSUME__KUK_TEMPERATURERANGE    KUK_TEMPERATURERANGE_UNKNOWN
#define ASSUME__KUK_BOOTSTORAGE         KUK_BOOTSTORAGE_UNKNOWN

#define ASSUME__PERIPHERAL_ETHERNET     KUK_ETHERNET_UNKNOWN    
#define ASSUME__PERIPHERAL_WIRELESS     KUK_WIRELESS_UNKNOWN
#define ASSUME__PERIPHERAL_AUDIO        KUK_AUDIO_UNKNOWN
#define ASSUME__PERIPHERAL_MCU          KUK_MCU_UNKNOWN
#define ASSUME__PERIPHERAL_LVDS         KUK_LVDS_UNKNOWN
#define ASSUME__PERIPHERAL_FPGA         KUK_FPGA_UNKNOWN
#define ASSUME__PERIPHERAL_IOVOLTAGE    KUK_IOVOLTAGE_UNKNOWN

#endif
#endif
#endif
#endif
#endif
#endif
 
// #define FORCE__KUK_MODULE_TYPE
// #define FORCE__KUK_RAMWIDTH
// #define FORCE__KUK_RAMSIZE
// #define FORCE__KUK_RAMSKEW
// #define FORCE__KUK_PCBREV
// #define FORCE__KUK_TEMPERATURERANGE
// #define FORCE__KUK_BOOTSTORAGE
// #define FORCE__PERIPHERAL_ETHERNET
// #define FORCE__PERIPHERAL_WIRELESS
// #define FORCE__PERIPHERAL_AUDIO   
// #define FORCE__PERIPHERAL_MCU     
// #define FORCE__PERIPHERAL_LVDS    
// #define FORCE__PERIPHERAL_FPGA   
// #define FORCE__PERIPHERAL_IOVOLTAGE 

enum KUK_OTP {
    KUK_OTP_MODULE,
    KUK_OTP_RAMWIDTH,
    KUK_OTP_RAMSIZE,
    KUK_OTP_RAMSKEW,
    KUK_OTP_PCBREV,
    KUK_OTP_TEMPERATURERANGE,
    KUK_OTP_BOOTSTORAGE,
    KUK_OTP_ETHERNET,
    KUK_OTP_WIRELESS,
    KUK_OTP_AUDIO,
    KUK_OTP_MCU,
    KUK_OTP_LVDS,
    KUK_OTP_FPGA,
    KUK_OTP_IOVOLTAGE
};
int kuk_GetOTP( int key, int defaultval);

enum KUK_MODULE_TYPE {
    KUK_MODULE_UNKNOWN = 0,
    KUK_MODULE_TRIZEPS8,
    KUK_MODULE_TRIZEPS8MINI,
    KUK_MODULE_TRIZEPS8NANO,
    KUK_MODULE_MYON2,
    KUK_MODULE_MYON2NANO
};
int kuk_GetModule( void);

enum KUK_RAMWIDTH {
    KUK_RAMWIDTH_UNKNOWN = -1,
    KUK_RAMWIDTH_8BIT = 8,
    KUK_RAMWIDTH_16BIT = 16,
    KUK_RAMWIDTH_32BIT = 32,
    KUK_RAMWIDTH_64BIT = 64
};
int kuk_GetRAMWidth( void);

enum KUK_RAMSIZE {
    KUK_RAMSIZE_UNKNOWN = -1,
    KUK_RAMSIZE_512MB = 0,
    KUK_RAMSIZE_1GB = 1,
    KUK_RAMSIZE_2GB = 2,
    KUK_RAMSIZE_3GB = 3,
    KUK_RAMSIZE_4GB = 4,
    KUK_RAMSIZE_8GB = 8,
    KUK_RAMSIZE_AUTODETECT
};
int kuk_GetRAMSize( void);
int kuk_GetRAMSkew( void);

enum KUK_PCBREV {
    KUK_PCBREV_UNKNOWN = -1,
    KUK_PCBREV_V1R1 = 0,
    KUK_PCBREV_V1R2 = 1,
    KUK_PCBREV_V1R3 = 2
};
int kuk_GetPCBrevision( void);

enum KUK_TEMPERATURERANGE {
    KUK_TEMPERATURERANGE_UNKNOWN = -1,
    KUK_TEMP_COMMERCIAL_0_70,
    KUK_TEMP_EXTENDED_m25_85,
    KUK_TEMP_INDUSTRIAL_m40_85
};
int kuk_GetTemperatureRange( void);


#define KUK_PERIPHERAL_UNKNOWN  1
enum KUK_PERIPHERAL {
    KUK_PERIPHERAL_ETHERNET,
    KUK_PERIPHERAL_WIRELESS,
    KUK_PERIPHERAL_AUDIO,
    KUK_PERIPHERAL_MCU,
    KUK_PERIPHERAL_LVDS,
    KUK_PERIPHERAL_FPGA,
    KUK_PERIPHERAL_IOVOLTAGE
};
enum KUK_ETHERNET {
    KUK_ETHERNET_NONE = 0,
    KUK_ETHERNET_UNKNOWN = KUK_PERIPHERAL_UNKNOWN,
    KUK_ETHERNET_AR8031,
};
enum KUK_WIRELESS {
    KUK_WIRELESS_NONE = 0,
    KUK_WIRELESS_UNKNOWN = KUK_PERIPHERAL_UNKNOWN,
    KUK_WIRELESS_LAIRD_SU60,
    KUK_WIRELESS_LAIRD_ST60,
    KUK_WIRELESS_HD_SPB228,
    KUK_WIRELESS_SILEX_SXPCEAC2
};
enum KUK_AUDIO {
    KUK_AUDIO_NONE = 0,
    KUK_AUDIO_UNKNOWN = KUK_PERIPHERAL_UNKNOWN,
    KUK_AUDIO_WM8983,
    KUK_AUDIO_WM8978
};
enum KUK_MCU {
    KUK_MCU_NONE = 0,
    KUK_MCU_UNKNOWN = KUK_PERIPHERAL_UNKNOWN,
    KUK_MCU_MKV10Z32VFM7,
    KUK_MCU_MKV11Z64VFM7
};
enum KUK_LVDS {
    KUK_LVDS_NONE = 0,
    KUK_LVDS_UNKNOWN = KUK_PERIPHERAL_UNKNOWN,
    KUK_LVDS_SN65DSI83, // single
    KUK_LVDS_SN65DSI85  // dual
};
enum KUK_FPGA {
    KUK_FPGA_NONE = 0,
    KUK_FPGA_UNKNOWN = KUK_PERIPHERAL_UNKNOWN,
    KUK_FPGA_LCMXO3LF_1300E,
    KUK_FPGA_LCMXO3LF_2100E,
    KUK_FPGA_LCMXO3LF_4300E,
    KUK_FPGA_LCMXO3L_1300E,
    KUK_FPGA_LCMXO3L_2100E,
    KUK_FPGA_LCMXO3L_4300E
};
enum KUK_IOVOLTAGE {
    KUK_IOVOLTAGE_UNKNOWN = KUK_PERIPHERAL_UNKNOWN,
    KUK_IOVOLTAGE_1V8,
    KUK_IOVOLTAGE_3V3,
    KUK_IOVOLTAGE_CUSTOM
};
int kuk_GetPeripheral( int peripheral);

enum KUK_BOOTSTORAGE {
    KUK_BOOTSTORAGE_UNKNOWN = 0,    
    KUK_BOOTSTORAGE_SDCARD,
    KUK_BOOTSTORAGE_EMMCxGB,
    KUK_BOOTSTORAGE_EMMC4GB,
    KUK_BOOTSTORAGE_EMMC8GB,
    KUK_BOOTSTORAGE_EMMC16GB,
    KUK_BOOTSTORAGE_EMMC32GB
};
int kukt_GetBootStorage( void);

int kuk_GetArticleNo( char *pArticle, int maxsize );
int kuk_GetDescription( char *pDescription, int maxsize );